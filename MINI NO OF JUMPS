
class Solution{
     //static int count=0;
  /*  public static int jump(int[] arr,int index,int count)
    {
        if(index>=arr.length) return 1;
        if(arr[index]==0) return 0;
       
        
     int pick = jump(arr,index+arr[index],count++);
     int np = jump(arr,index+1);
     return Math.min(pick,np);
        
    }*/
    
    
    
    static int minJumps(int[] arr){
          int jump=0;

        int pos=0;

        int des=0;
       int n=arr.length;
        

        for(int i=0;i<n-1;i++)

        {

            des =Math. max(des,arr[i]+i);

            if(pos==i)

            {

                pos=des;

                jump++;

            }

        }

        if(pos>=(n-1))

        {

            return jump;

        }

        else return -1;
        
        
    }
}
https://practice.geeksforgeeks.org/problems/minimum-number-of-jumps-1587115620/1?page=1&category[]=Arrays&sortBy=submissions
